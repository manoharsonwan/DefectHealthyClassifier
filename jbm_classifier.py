# -*- coding: utf-8 -*-
"""jbm_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14HtPkMcbwLLtWVP3q7j1zrY3IXoxykmj
"""

from keras.models import load_model
import cv2
import numpy as np
from google.colab.patches import cv2_imshow
from matplotlib import pyplot as plt
model = load_model("/content/drive/My Drive/JBM_GROUP/JBM_group.h5")
model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

from keras.preprocessing import image
imge= cv2.imread("/content/drive/My Drive/JBM_GROUP/Train/Defected/IMG20180905145559.jpg")
img = image.load_img("/content/drive/My Drive/JBM_GROUP/Train/Defected/IMG20180905145559.jpg", target_size = (64, 64)) 
test_image = image.img_to_array(img)
test_image = np.expand_dims(test_image, axis = 0)
#predict the result
result = model.predict(test_image)
label = "Defected" if result[0][0] == 0 else "Healthy"
color = (0, 0, 255) if result[0][0] == 0 else (0, 255, 0)
imge = cv2.resize(imge, (400, 400))
cv2.putText(imge, label, (3, 20), cv2.FONT_HERSHEY_SIMPLEX, 0.5,color, 2)
# plt.imshow(image)
# plt.show()
cv2_imshow(imge)
cv2.waitKey(0)
# print(pred)
# print(result)
# if result[0][0] == 0:
#   print("Defected")
# else:
#   print("Healthy")